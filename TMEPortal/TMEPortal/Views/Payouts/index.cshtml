@{ ViewBag.Title = "iniciaPago"; Layout = ""; }

<!DOCTYPE html>

<html>

<head>
    <title>Buy cool new product</title>
    <script src="https://js.stripe.com/v3/"></script>
</head>

<body>

    <div id="details">
        <input id="cardholder-name" type="text" placeholder="Cardholder name">
        <!-- placeholder for Elements -->
        <form id="payment-form">
            <div id="card-element"></div>
            <button id="card-button">Next</button>
        </form>
    </div>


    <div id="plans" hidden>
        <form id="installment-plan-form">
            <label><input id="immediate-plan" type="radio" name="installment_plan" value="-1" />Immediate</label>
            <input id="payment-intent-id" type="hidden" />
        </form>
        <button id="confirm-button">Confirm Payment</button>
    </div>

    <div id="result" hidden>
        <p id="status-message"></p>
    </div>



    <form action="/Payouts/CreateCheckoutSession" method="POST">
        <button type="submit">Checkout</button>
    </form>
</body>

</html>


<script>
    var stripe = Stripe(

        'pk_test_51JPs4jHcWweoTFXWWWHI2yR5TU9qi4OApPXuhS3OrpddoVaKq4WgoObJfM3Gav7iyMucu5RhfA1hRwwvCd5bojxY00lKYkK3L6'
    );

    var elements = stripe.elements();
    var cardElement = elements.create('card');
    cardElement.mount('#card-element');

    //Paso 2
    var cardholderName = document.getElementById('cardholder-name');
    var form = document.getElementById('payment-form');

    form.addEventListener('submit', function (ev) {
        ev.preventDefault();
        stripe.createPaymentMethod({
            type: 'card',
            card: cardElement,
            billing_details: {
                name: cardholderName.value
            }
        }).then(function (result) {
            if (result.error) {
                console.log(result);
            } else {
                // Otherwise send paymentMethod.id to your server (see Step 2)
                fetch('/Payouts/Datos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        PaymentMethodId: result.paymentMethod.id
                    })
                }).then(function (result) {
                    // Handle server response (see Step 3)
                    console.log(result);
                    result.json().then(function (json) {
                        handleInstallmentPlans(json);
                    })
                });
            }
        });
    });

    //paso 3
    const selectPlanForm = document.getElementById('installment-plan-form');
    let availablePlans = [];

    const handleInstallmentPlans = async (response) => {
        if (response.error) {
            console.log(response);
            // Show error from server on payment form
        } else {
            // Store the payment intent ID.
            document.getElementById('payment-intent-id').value = response.intent_id;
            availablePlans = response.available_plans;

            // Show available installment options
            availablePlans.forEach((plan, idx) => {
                const newInput = document.getElementById('immediate-plan').cloneNode();
                newInput.setAttribute('value', idx);
                newInput.setAttribute('id', '');
                const label = document.createElement('label');
                label.appendChild(newInput);
                label.appendChild(
                    document.createTextNode(`${plan.Count} meses`),
                );

                selectPlanForm.appendChild(label);
            });

            document.getElementById('details').hidden = true;
            document.getElementById('plans').hidden = false;
        }
    };

    //Paso 4
    const confirmButton = document.getElementById('confirm-button');

    confirmButton.addEventListener('click', async (ev) => {
        const selectedPlanIdx = selectPlanForm.installment_plan.value;
        const selectedPlan = availablePlans[selectedPlanIdx];
        const intentId = document.getElementById('payment-intent-id').value;
        const response = await fetch('/Payouts/Confirma', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                PaymentIntentId: intentId,
                SelectedPlan: selectedPlan,
            }),
        });

        const responseJson = await response.json();

        // Show success / error response.
        document.getElementById('plans').hidden = true;
        document.getElementById('result').hidden = false;

        var message;
        if (responseJson.status === "succeeded" && selectedPlan !== undefined) {
            message = `Success! You made a charge with this plan:${selectedPlan.count
                } ${selectedPlan.interval}`;
        } else if (responseJson.status === "succeeded") {
            message = "Success! You paid immediately!";
        } else {
            message = "Uh oh! Something went wrong";
        }

        document.getElementById("status-message").innerText = message;
    });
</script>