@{ ViewBag.Title = "iniciaPago";
    Layout = ""; }

<!DOCTYPE html>

<html>

<head>
    <title>Portal de pagos KOBER</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.min.js" integrity="sha384-cn7l7gDp0eyniUwwAZgrzD06kc/tftFf19TOAs2zVinnD/C7E91j9yyk5//jjpt/" crossorigin="anonymous"></script>
    <script src="https://js.stripe.com/v3/"></script>

</head>

<body>
    <div class="container">

        <div class="row mt-4">
            <div class="col-md-12 text-center" style="background-color: #004072" >
                <img src="https://kober.com.mx/images/logo-white.svg" width="50%"/>
                <h2 id="lblTitulo" style="color:#ffffff">Portal de Pagos</h2>
            </div>
        </div>

        <div class="row mt-4 justify-content-md-center">
            <div class="col-md-7 bg-light">
            
                <h3 class="text-center mt-1 mb-3" >Ingrese los datos para el pago del pedido @ViewBag.pedido</h3>


                <div id="details" class=" row form-group">
                    <input id="cardholder-name" type="text" placeholder="NOMBRE DE TITULAR DE TARJETA" class="form-control">
                    <br />
                    <!-- placeholder for Elements -->
                    <form id="payment-form" class="mt-4">
                        <div id="card-element"></div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button class="btn btn-outline-primary btn-lg mt-5" id="card-button"> Pagar y verificar Parcialidades </button>
                        
                        </div>
                
                    </form>
                </div>


                <div id="plans" hidden>
                    <form id="installment-plan-form">
                        <label><input id="immediate-plan" type="radio" name="installment_plan" value="-1" />Una sola Excibición</label>
                        <input id="payment-intent-id" type="hidden" />
                    </form>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <button class="btn btn-outline-primary btn-lg mt-5" id="confirm-button"> Confirmar Pago </button>

                    </div>
                   
                </div>

                <div id="result" hidden>
                    <h2 class="text-center" id="status-message"></h2>
                </div>



            </div>
        </div>


    

    </div>

    <!--
    <form action="/Payouts/CreateCheckoutSession" method="POST">
        <button type="submit">Checkout</button>
    </form>
        -->
</body>

</html>


<script>
    var stripe = Stripe(

        'pk_test_51JPs4jHcWweoTFXWWWHI2yR5TU9qi4OApPXuhS3OrpddoVaKq4WgoObJfM3Gav7iyMucu5RhfA1hRwwvCd5bojxY00lKYkK3L6'
    );

    var elements = stripe.elements();
    var style = {
        base: {
            border: "thick solid #0000FF",
            color: '#32325d',
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '24px',
            '::placeholder': {
                color: '#aab7c4'
            }
        },
        invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
        }
    };
    var cardElement = elements.create('card', {
        style: style
    });
   // var cardElement = elements.create('card');
    cardElement.mount('#card-element');

    //Paso 2
    var cardholderName = document.getElementById('cardholder-name');
    var form = document.getElementById('payment-form');

    form.addEventListener('submit', function (ev) {
        ev.preventDefault();
        stripe.createPaymentMethod({
            type: 'card',
            card: cardElement,
            billing_details: {
                name: cardholderName.value
            }
        }).then(function (result) {
            if (result.error) {
                console.log(result);
            } else {
                // Otherwise send paymentMethod.id to your server (see Step 2)
                fetch('/Payouts/Datos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        PaymentMethodId: result.paymentMethod.id
                    })
                }).then(function (result) {
                    // Handle server response (see Step 3)
                    console.log(result);
                    result.json().then(function (json) {
                        handleInstallmentPlans(json);
                    })
                });
            }
        });
    });

    //paso 3
    const selectPlanForm = document.getElementById('installment-plan-form');
    let availablePlans = [];

    const handleInstallmentPlans = async (response) => {
        if (response.error) {
            console.log(response);
            // Show error from server on payment form
        } else {
            // Store the payment intent ID.
            document.getElementById('payment-intent-id').value = response.intent_id;
            availablePlans = response.available_plans;

            // Show available installment options
            availablePlans.forEach((plan, idx) => {
                if (idx < 2) {

                    const newInput = document.getElementById('immediate-plan').cloneNode();
                    newInput.setAttribute('value', idx);
                    newInput.setAttribute('id', '');
                    const label = document.createElement('label');
                    label.appendChild(newInput);
                    label.appendChild(
                        document.createTextNode(`${plan.Count} meses`),
                    );

                    selectPlanForm.appendChild(label);
                }
            });

            document.getElementById('details').hidden = true;
            document.getElementById('plans').hidden = false;
        }
    };

    //Paso 4
    const confirmButton = document.getElementById('confirm-button');

    confirmButton.addEventListener('click', async (ev) => {
        const selectedPlanIdx = selectPlanForm.installment_plan.value;
        const selectedPlan = availablePlans[selectedPlanIdx];
        const intentId = document.getElementById('payment-intent-id').value;
        const response = await fetch('/Payouts/Confirma', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                PaymentIntentId: intentId,
                SelectedPlan: selectedPlan,
            }),
        });

        const responseJson = await response.json();

        // Show success / error response.
        document.getElementById('plans').hidden = true;
        document.getElementById('result').hidden = false;

        var message;
        if (responseJson.status === "succeeded" && selectedPlan !== undefined) {
            console.log(selectedPlan);
            message = `Exito! el pago se difirió a : ${selectedPlan.Count
                } meses sin intereses`;
        } else if (responseJson.status === "succeeded") {
            message = "Exito! el pago se realizó a una sola excibición!";
        } else {
            message = "Uh oh! Something went wrong";
        }

        document.getElementById("lblTitulo").className = 'hidden';
        document.getElementById("status-message").innerText = message;
    });
</script>